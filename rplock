#!/bin/bash

# This program is free software. It comes without any warranty, to
# the extent permitted by applicable law. You can redistribute it
# and/or modify it under the terms of the Do What The Fuck You Want
# To Public License, Version 2, as published by Sam Hocevar and 
# reproduced below.
#
# DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE 
# Version 2, December 2004 
#
# Copyright (C) 2004 Sam Hocevar <sam@hocevar.net> 
#
#	Everyone is permitted to copy and distribute verbatim or modified 
#	copies of this license document, and changing it is allowed as long 
#	as the name is changed. 
#
# DO WHAT THE FUCK YOU WANT TO PUBLIC LICENSE 
# TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION 
#
#	0. You just DO WHAT THE FUCK YOU WANT TO.

LAYOUT=locked_layout
LOCKPHRASE=rp_lockphrase

rp(){
	ratpoison -c "$1"
}

hide(){
	printf "Storing current layout to %s\n" "$(pwd)"
	screens=$(ratpoison -c "sdump" | tr -cd , | wc -c)
	rp sfdump > "$LAYOUT"
	# For each screen
	for screen in $(seq 0 $screens); do
		# Lock
		rp only
		rp 'select -'
		rp nextscreen
	done
}

unhide(){
	rp "sfrestore $(<"$LAYOUT")"
	rm "$LAYOUT"
}

lock(){
	rp 'newkmap locked'
	if [ "$?" == "0" ]; then
		# Set up lock keymap
		for char in a b c d e f g h i j k l m n o p q r s t u v w x y z 0 1 2 3 4 5 6 7 8 9; do
			rp "definekey locked $char exec rplock press $char"
		done
		rp 'definekey locked Return exec rplock check'
	fi
	rp 'set topkmap locked'
}

unlock(){
	rp 'set topkmap top'
}

password_matches(){
	phrase=$(cat "$LOCKPHRASE" | head -n 1)
	lines=$(cat "$LOCKPHRASE" | wc -l)
	uniqs=$(cat "$LOCKPHRASE" | uniq | wc -l)
	if [ "$lines" -ge "2" ]; then
		printf "%s\n" "$phrase" > "$LOCKPHRASE"
		if [ "$uniqs" == "1" ]; then
			rm "$LOCKPHRASE"
			return 0
		fi
		rp 'echo No.'
	fi
	return 255
}

case "$1" in
	"press")
		printf "%s" "$2" >> "$LOCKPHRASE";;
	"check")
		printf "\n" >> "$LOCKPHRASE"
		if password_matches; then
			$0 unlock
		fi;;
	"unlock")
		unlock
		unhide;;
	*)
		hide
		lock;;
esac
